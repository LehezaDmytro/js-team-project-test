{"mappings":"0DACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,ECfX,MACMK,EAAS,ICAf,MASIC,KAAMC,EAAUC,EAAS,IACrB,MAAMC,EAAc,IAAIC,gBAAgB,IACjCF,IACJG,WAEH,OAAOC,MAAM,GAAGC,KAAKC,UAAUP,KAAYE,IAAe,CAAEM,QAASF,KAAKE,UACrEC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,GACKA,G,CAInBC,SACI,OAAOP,KAAKP,KAAK,S,CAGrBe,KAAMb,GACF,OAAOK,KAAKP,KAAK,OAAQE,E,CAvB7Bc,YAAYC,EAAS,IAFrBC,EAAA3B,EAAA,CAAAgB,KAAA,UAAU,8BAGNA,KAAKE,QAAU,CACXU,OAAQF,E,GDNG,4CAKjBG,EAAUC,SAASC,cAAc,YACjCC,EAAMF,SAASC,cAAc,QAC7BE,EAAcH,SAASC,cAAc,iBACrCG,EAAeJ,SAASC,cAAc,kBACtCI,EAAiBL,SAASC,cAAc,qBAG9CvB,EAAOgB,OAAOL,MAAKiB,IACf,MAAMC,EAAWD,EAASd,KAAKgB,SAASC,KAAKC,KAC7CC,QAAQC,IAAIN,GACRrB,MAAM,oDAAoDsB,4CAA4ClB,MAAKC,IACvG,IAAKA,EAASuB,GACd,MAAM,IAAIC,MAAMxB,EAASG,QAEzB,OAAOH,EAASC,MAAM,IACnBF,MAAKG,IACJmB,QAAQC,IAAIpB,GACZO,EAAQgB,UAAYC,KAAKC,MAAMzB,EAAK0B,KAAKC,KAAO,KAAO,QACvDjB,EAAIkB,YAAc5B,EAAK6B,QAAQ,GAAGH,KAClCf,EAAYiB,YAAc5B,EAAKkB,KAC/BN,EAAaW,UAAY,+CAA+CvB,EAAK6B,QAAQ,GAAGC,uBACxFjB,EAAekB,aAAa,OAAQ,mCAAmC/B,EAAKgC,KAAK,GACnF","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/index.js","node_modules/@everapi/ipbase-js/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import Ipbase from '@everapi/ipbase-js';\nconst IPBASE_API_KEY = '1hRsRE5cxGAM9Eqz9iMCGOmmPnhGRIoacjJXuXFw';\nconst ipBase = new Ipbase(IPBASE_API_KEY);\n\nconst OPENWEATHERMAP_API_KEY = '5019a2f2565a9e30731ac468ed123013'\n\nconst degrees = document.querySelector('.degrees');\nconst sky = document.querySelector('.sky');\nconst currentCity = document.querySelector('.current-city');\nconst weathehImage = document.querySelector('.weatheh-image');\nconst weatherForWeek = document.querySelector('.weather-for-week')\n\n\nipBase.info().then(response => {\n    const cityName = response.data.location.city.name;\n    console.log(response);\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${OPENWEATHERMAP_API_KEY}`).then(response => {\n            if (!response.ok) {\n            throw new Error(response.status);\n            }\n            return response.json()\n            }).then(data => {\n                console.log(data);\n                degrees.innerHTML = Math.round(data.main.temp - 273) + '&deg;';\n                sky.textContent = data.weather[0].main\n                currentCity.textContent = data.name\n                weathehImage.innerHTML = `<img src=\"https://openweathermap.org/img/wn/${data.weather[0].icon}@2x.png\" alt=\"\">`\n                weatherForWeek.setAttribute('href', `https://openweathermap.org/city/${data.id}`)\n            });\n});\n\n","'use strict';\n\nclass Ipbase {\n    baseUrl = 'https://api.ipbase.com/v2/';\n\n    constructor(apiKey = '') {\n        this.headers = {\n            apikey: apiKey\n        };\n    }\n\n    call (endpoint, params = {}) {\n        const paramString = new URLSearchParams({\n            ...params\n        }).toString();\n\n        return fetch(`${this.baseUrl}${endpoint}?${paramString}`, { headers: this.headers })\n            .then(response => response.json())\n            .then(data => {\n                return data;\n            });\n    }\n\n    status () {\n        return this.call('status');\n    }\n\n    info (params) {\n        return this.call('info', params);\n    }\n}\n\nexport default Ipbase;\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$1f0dc3b9307be026$var$ipBase","call","endpoint","params","paramString","URLSearchParams","toString","fetch","this","baseUrl","headers","then","response","json","data","status","info","constructor","apiKey","$parcel$interopDefault","apikey","$1f0dc3b9307be026$var$degrees","document","querySelector","$1f0dc3b9307be026$var$sky","$1f0dc3b9307be026$var$currentCity","$1f0dc3b9307be026$var$weathehImage","$1f0dc3b9307be026$var$weatherForWeek","response1","cityName","location","city","name","console","log","ok","Error","innerHTML","Math","round","main","temp","textContent","weather","icon","setAttribute","id"],"version":3,"file":"index.09088b38.js.map"}